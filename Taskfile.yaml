# https://taskfile.dev

version: "3"

env:
  BUILDER_IMAGE: cgr.dev/chainguard/sdk:latest
  LIMA_INSTANCE: melange-drone-plugin-dev-env
  PLUGIN_IMAGE: docker.io/kameshsampath/melange-drone-plugin

tasks:
  build_env:
    desc: start lima-vm to run melange and apko commands
    silent: true
    cmds:
      - limactl start --name={{.LIMA_INSTANCE}} --tty=false lima-vm.yaml

  dev_shell:
    aliases:
      - shell
    silent: true
    desc: shell into the lima vm
    cmds:
      - limactl shell {{.LIMA_INSTANCE}} sudo su -c "HOME=\"${HOME}\" bash"

  delete_build_env:
    desc: stop and delete lima-vm {{.LIMA_INSTANCE}}
    silent: true
    cmds:
      - limactl delete --force {{.LIMA_INSTANCE}}

  build_plugin_packages:
    aliases:
      - packages
    desc: |
      Builds the drone plugin and its dependant packages
    silent: true
    cmds:
      - task: melange-drone-plugin

  melange-drone-plugin:
    internal: true
    sources:
      - "{{.PACKAGE_NAME}}.yaml"
      - run.sh
    generates:
      - "packages/aarch64/{{.PACKAGE_NAME}}-{{.PACKAGE_VERSION}}-r0.apk"
      - "packages/x86_64/{{.PACKAGE_NAME}}-{{.PACKAGE_VERSION}}-r0.apk"
    cmds:
      - task: package
        vars:
          PACKAGE_NAME: "{{.PACKAGE_NAME}}"
          PACKAGE_VERSION: "{{.PACKAGE_VERSION}}"
    vars:
      PACKAGE_NAME: melange-drone-plugin
      PACKAGE_VERSION: 0.0.1

  build_plugin:
    aliases:
      - image
    desc: |
      Build the Kubernetes Dev Tools image with all the the tools that are needed for building and deploying applications using kubernetes
    silent: true
    deps:
      - build_plugin_packages
    cmds:
      - mkdir -p dist/{{.NAME}}
      - task: image_arm64
      - task: image_amd64

  load:
    desc: loads the plugin image to local docker daemon
    silent: true
    deps:
      - build_plugin
    cmds:
      - docker load < {{.ROOT_DIR}}/dist/{{.NAME}}/container_$(uname -m).tar

  # creates the apk package
  package:
    desc: builds the apk package
    silent: false
    internal: true
    label: "package-{{.PACKAGE_NAME}}"
    sources:
      - "{{.PACKAGE_NAME}}.yaml"
      - run.sh
    generates:
      - "packages/aarch64/{{.PACKAGE_NAME}}-{{.PACKAGE_VERSION}}-r0.apk"
      - "packages/x86_64/{{.PACKAGE_NAME}}-{{.PACKAGE_VERSION}}-r0.apk"
    cmds:
      - limactl shell {{.LIMA_INSTANCE}} sudo su -c "HOME=\"${HOME}\" melange build --arch=arm64,amd64 --signing-key ${HOME}/.ssh/drone-plugin-melange.rsa {{.PACKAGE_NAME}}.yaml"

  # publishes the plugin image
  publish_plugin:
    desc: publishes the drone plugin image to remote registry
    silent: false
    preconditions:
      - sh: '! crane manifest {{.PLUGIN_IMAGE}}:{{.TAG}} &>/dev/null && true'
        msg: "{{.TAG}} for image {{.PLUGIN_IMAGE}} already exists, skipping build"
    cmds:
      - limactl shell {{.LIMA_INSTANCE}} sudo su -c "apko publish plugin.yaml {{.PLUGIN_IMAGE}}:{{.TAG}}"
      - crane tag "{{.PLUGIN_IMAGE}}:{{.TAG}}" latest
    vars:
      TAG:
       sh: svu patch --strip-prefix

  # builds the image
  image_arm64:
    silent: false
    internal: true
    label: "plugin-arm64-image"
    sources:
      - plugin.yaml
      - melange-drone-plugin.yaml
      - run.sh
    generates:
      - dist/{{.NAME}}/container_arm64.tar
    cmds:
      - limactl shell {{.LIMA_INSTANCE}} sudo su -c "apko build --build-arch=arm64 $IMAGE_FILE $PUBLISH_REPO ./dist/{{.NAME}}/container_arm64.tar --debug"

  image_amd64:
    silent: true
    internal: true
    label: "plugin-amd64-image"
    sources:
      - plugin.yaml
      - melange-drone-plugin.yaml
      - run.sh
    generates:
      - dist/{{.NAME}}/container_amd64.tar
    cmds:
      - limactl shell {{.LIMA_INSTANCE}} sudo su -c "apko build --build-arch=amd64 $IMAGE_FILE $PUBLISH_REPO ./dist/{{.NAME}}/container_amd64.tar --debug"

  clean:
    desc: Cleans the packages and dist directory
    silent: true
    cmds:
      - rm -rf packages
      - rm -rf dist
      - mkdir -p dist packages
